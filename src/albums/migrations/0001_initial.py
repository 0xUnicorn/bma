# Generated by Django 4.1.1 on 2022-10-01 16:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import users.sentinel
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("files", "0003_alter_basefile_owner"),
        ("taggit", "0005_auto_20220424_2025"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("utils", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Album",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="The unique ID (UUID4) of this object.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when this object was first created.",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when this object was last updated.",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="The title of this album. Required.", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of this album. Optional. Supports markdown.",
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
        ),
        migrations.CreateModel(
            name="AlbumMember",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="The unique ID (UUID4) of this object.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when this object was first created.",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when this object was last updated.",
                    ),
                ),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="albums.album"
                    ),
                ),
                (
                    "basefile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="files.basefile"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="album",
            name="files",
            field=models.ManyToManyField(
                related_name="albums", through="albums.AlbumMember", to="files.basefile"
            ),
        ),
        migrations.AddField(
            model_name="album",
            name="owner",
            field=models.ForeignKey(
                help_text="The creator of this album.",
                on_delete=models.SET(users.sentinel.get_sentinel_user),
                related_name="albums",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="album",
            name="tags",
            field=taggit.managers.TaggableManager(
                help_text="The tags for this album.",
                through="utils.UUIDTaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
    ]
